import * as path from "path";
import * as fs from "fs";
import {getInfoFromFiles, createFile} from "./../main";

export function generateStrictStructures() {
    const result = getInfoFromFiles([path.join(__dirname, "../../src/structures.ts")]);
    const fileDefForCreate = createFile();

    result.files.filter(f => f.fileName.indexOf("structures") >= 0).forEach(f => {
        f.interfaces.forEach(i => {
            i.name = "Strict" + i.name;
            i.properties.forEach(p => {
                p.isOptional = false;
                if (p.type.text.indexOf("Structure") >= 0 && p.type.text.indexOf("Strict") === -1) {
                    p.type.text = "Strict" + p.type.text;
                }
            });
            i.extendsTypes.forEach(e => {
                e.text = "Strict" + e.text;
            });
            i.typeParameters.forEach(t => {
                if (t.constraintType != null) {
                    t.constraintType.text = "Strict" + t.constraintType.text;
                }
            });
            fileDefForCreate.interfaces.push(i);
        });
    });

    fileDefForCreate.addImports({
        defaultImportName: "CodeBlockWriter",
        moduleSpecifier: "code-block-writer"
    });

    fileDefForCreate.onBeforeWrite = writer => {
        writer.writeLine("// autogenerated file by gulp generate-strict-structures - DO NOT EDIT!!!").newLine();
    };

    fs.writeFile(path.join(__dirname, "../../src/strictStructures.ts"), fileDefForCreate.write());
}
